<style lang="less"></style>

<script>
  import wepy from 'wepy'
  import 'wepy-async-function'
  import '@/baseAPI.js'

  export default class extends wepy.app {
    config = {
      pages: [
        'pages/tabs/home',
        'pages/tabs/cates',
        'pages/tabs/search',
        'pages/tabs/cart',
        'pages/tabs/me',
        // 商品细节页面
        'pages/goods_detail/main',
        // 商品列表页面
        'pages/goods_list'
      ],
      window: {
        backgroundTextStyle: 'dark',
        navigationBarBackgroundColor: '#d81e06',
        navigationBarTitleText: '优购商城',
        navigationBarTextStyle: 'white'
      },
      tabBar: {
        selectedColor: '#D81E06',
        list: [
          {
            pagePath: 'pages/tabs/home',
            text: '首页',
            iconPath: '/assets/icons/home.png',
            selectedIconPath: '/assets/icons/home-active.png'
          },
          {
            pagePath: 'pages/tabs/cates',
            text: '分类',
            iconPath: '/assets/icons/cates.png',
            selectedIconPath: '/assets/icons/cates-active.png'
          },
          {
            pagePath: 'pages/tabs/search',
            text: '搜索',
            iconPath: '/assets/icons/search.png',
            selectedIconPath: '/assets/icons/search-active.png'
          },
          {
            pagePath: 'pages/tabs/cart',
            text: '购物车',
            iconPath: '/assets/icons/cart.png',
            selectedIconPath: '/assets/icons/cart-active.png'
          },
          {
            pagePath: 'pages/tabs/me',
            text: '我的',
            iconPath: '/assets/icons/my.png',
            selectedIconPath: '/assets/icons/my-active.png'
          }
        ]
      },
      // 引用并注册全局组件
      usingComponents: {
        // 徽章组件
        'van-badge': './assets/vant/badge/index',
        'van-badge-group': './assets/vant/badge-group/index',
        // 布局组件
        'van-row': './assets/vant/row/index',
        'van-col': './assets/vant/col/index',
        // 搜索框组件
        'van-search': './assets/vant/search/index',
        // 单元格组件
        'van-cell': './assets/vant/cell/index',
        'van-cell-group': './assets/vant/cell-group/index',
        // 图标组件
        'van-icon': './assets/vant/icon/index',
        // tag标签
        'van-tag': './assets/vant/tag/index',
        // 卡片组件
        'van-card': './assets/vant/card/index',
        // tab 标签页
        'van-tab': './assets/vant/tab/index',
        'van-tabs': './assets/vant/tabs/index',
        // 商品导航区域
        'van-goods-action': './assets/vant/goods-action/index',
        'van-goods-action-icon': './assets/vant/goods-action-icon/index',
        'van-goods-action-button': './assets/vant/goods-action-button/index'
      }
    }

    // 专门存储全局共享的数据
    // 只需要通过 this.$parent.globalData 就可以拿到这个全局共享的数据对象
    globalData = {
      // 全局的购物车列表
      cart: []
    }

    // 把商品，添加到购物车列表中
    addGoodsToCart (goods) {
      // 先根据 Id 查找购物车列表中，是否已经存储了对应的商品信息
      // 如果查找的结果，值为 -1，证明要添加的商品不存在于购物车中，可以直接 push
      // 如果查找的结果，值不为 -1，证明要添加的商品，已存在以购物车中，此时直接更新数量即可！！！
      const i = this.globalData.cart.findIndex(x => x.id === goods.goods_id)
      if (i !== -1) {
        this.globalData.cart[i].count++
        return
      }
      // 梳理出来的商品信息对象
      const info = {
        // 商品Id
        id: goods.goods_id,
        // 名称
        name: goods.goods_name,
        // 图片
        pic: goods.goods_small_logo,
        // 价格
        price: goods.goods_price,
        // 数量
        count: 1,
        // 是否默认被选中
        isCheck: true
      }
      this.globalData.cart.push(info)
      // 持久化数据，保存到本地
      this.saveCartToStorage()
    }

    // 将购物车中的商品数据，持久化保存到本地
    saveCartToStorage () {
      wepy.setStorageSync('cart', this.globalData.cart)
    }

    constructor() {
      super()
      this.use('requestfix')
      this.use('promisify')
      // 拦截器
      this.intercept('request', {
        // 发出请求时的回调函数
        config (p) {
          // 显示loading效果
          wepy.showLoading({
            title: '数据加载中...'
          })
          // 必须返回OBJECT参数对象，否则无法发送请求到服务端
          return p
        },

        // 请求成功后的回调函数
        success (p) {
          // 必须返回响应数据对象，否则后续无法对响应数据进行处理
          return p
        },

        // 请求失败后的回调函数
        fail (p) {
          // 必须返回响应数据对象，否则后续无法对响应数据进行处理
          return p
        },

        // 请求完成时的回调函数(请求成功或失败都会被执行)
        complete (p) {
          // 隐藏loading效果
          wepy.hideLoading()
        }
      })
    }

    onLaunch () {
      console.log('小程序启动了')
      this.globalData.cart = wepy.getStorageSync('cart') || []
    }
  }
</script>
